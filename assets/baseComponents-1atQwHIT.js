var l=Object.defineProperty;var n=(o,t,e)=>t in o?l(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var m=(o,t,e)=>n(o,typeof t!="symbol"?t+"":t,e);/* empty css                                                                            *//* empty css                                                                                  *//* empty css                                                                     *//* empty css                                                                         */import"./mockApi-bZpfkG11.js";import{e as p}from"./common-zmIArfSH.js";/* empty css                                                                     *//* empty css                                                                   *//* empty css                                                                     *//* empty css                                                               */import{l as i}from"./lowCodeStore-DSZMLO-U.js";/* empty css                                                                                       */import{Q as c}from"./index-Clgzg2y2.js";const s=i(),r=async o=>{let t={};return t=JSON.parse(JSON.stringify(s.commonTemplateComponentsData[o])),await c.request({url:"/api/getboom/baseModule/addModule",method:"post",data:{module:t,templateType:JSON.parse(sessionStorage.getItem("sasslowCodeData"))==null?"":JSON.parse(sessionStorage.getItem("sasslowCodeData")).templateType,templateId:JSON.parse(sessionStorage.getItem("sasslowCodeData"))==null?"":JSON.parse(sessionStorage.getItem("sasslowCodeData")).templateId}}).then(e=>{t.id=e.data.id,t.sortIndex=s.commonTemplateSelectComponentArr.length,d(t)}),t};class O{constructor(){m(this,"initNormalComponents",async t=>{await r(t).then(e=>{s.setCommonTemplateSelectArrData(t),s.updateCommonTemplateSelectArrData(e)})});m(this,"spliceNormalComponents",async(t,e)=>{await r(t).then(a=>{s.spliceCommonTemplateSelectArrData(a,e)})})}}const b=async o=>{let t=!1;return await o.value.submitCheck().then(async e=>{t=e}),t},d=o=>{const t=o.moduleTitle.split("");let e="";t.forEach(a=>{/^[a-zA-Z0-9_\u4e00-\u9fa5]+$/.test(a)&&(/^[_]+$/.test(a)?e+=a:e+=p(a).split("")[0])}),o.moduleCode=e+o.id};export{O as I,b as c};
